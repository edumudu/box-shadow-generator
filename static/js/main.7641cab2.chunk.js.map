{"version":3,"sources":["general-styles.ts","components/Header/styles.ts","components/Header/index.tsx","components/Generator/Settings/styles.ts","components/Form/BaseInput/styles.ts","components/Form/BaseInput/index.tsx","components/Form/InputColor/index.tsx","components/Form/InputRange/styles.ts","components/Form/InputRange/index.tsx","components/Form/InputSwitch/styles.ts","components/Generator/Settings/index.tsx","components/Form/InputSwitch/index.tsx","utils/colorsConvertion.ts","contexts/BoxShadowContext.tsx","utils/generateCssCommand.ts","components/Generator/Preview/styles.ts","components/Generator/Preview/index.tsx","components/Generator/styles.ts","components/Generator/index.tsx","pages/HomePage/styles.ts","pages/HomePage/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["colors","start","end","Container","styled","div","HeaderTag","header","Logo","h1","Button","a","Nav","nav","Header","href","SettingsTag","Wrapper","Group","Command","pre","IconWrapper","props","active","CopiedMessage","displayNoneTypes","InputHead","input","includes","type","BaseInput","children","InputColor","name","onChange","alpha","value","color","mode","obj","className","Range","ValueBox","InputRange","min","max","step","e","Number","target","copyButtonTimeout","Switch","label","Trigger","span","Input","InputSwitch","on","off","id","String","Math","random","checked","htmlFor","hexToRgba","hex","rgb","slice","match","map","x","parseInt","join","BoxShadowContext","createContext","BoxShadowProvider","useState","rgba","y","length","blur","boxShadow","setBoxShadow","boxBackground","setBoxBackgound","containerBackground","setContainerBackgound","currentCssCommands","generateCssCommand","Provider","changeBoxShadow","partial","toFixed","changeBoxBackground","changeContainerBackground","Settings","copyActive","setCopyActive","useContext","val","isChecked","onClick","clearTimeout","setTimeout","navigator","clipboard","writeText","dangerouslySetInnerHTML","__html","Prism","highlight","languages","css","replace","PreviewTag","background","PreviewElement","attrs","style","shadow","box","Preview","split","trim","Generator","GlobalStyle","createGlobalStyle","MainContent","main","Card","HomePage","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7641cab2.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const colors = {\n  black: '#2b2b2b',\n  white: '#ffffff',\n  fuscosa: '#cc4477',\n  gradient: {\n    start: '#ba68c8',\n    end: '#ff8a65',\n  },\n};\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  width: 96%;\n  max-width: 1180px;\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n  }\n`;\n","import styled from 'styled-components';\nimport { colors } from '../../general-styles';\n\nexport const HeaderTag = styled.header`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 80px;\n  padding: 0 2%;\n  font-weight: 600;\n  font-size: 1.8rem;\n  color: ${colors.black};\n  background-color: ${colors.white};\n  box-shadow: 0 0 3px #ddd;\n`;\n\nexport const Logo = styled.h1`\n  font-size: 1.8rem;\n  font-weight: 300;\n`;\n\nexport const Button = styled.a`\n  background: ${colors.gradient.start};\n  background: linear-gradient(to right, ${colors.gradient.start}, ${colors.gradient.end});\n  background: -webkit-linear-gradient(to right, ${colors.gradient.start}, ${colors.gradient.end});\n  color: #ffffff;\n  text-decoration: none;\n  border-radius: 2px;\n  transition: background-color 0.3s ease-in 0s;\n  font-weight: 300;\n  font-size: 1rem;\n  padding: 10px 30px;\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import React from 'react';\n\nimport { Container } from '../../general-styles';\nimport { HeaderTag, Logo, Button, Nav } from './styles';\n\nconst Header = () => (\n  <HeaderTag>\n    <Container>\n      <Nav>\n        <Logo>Box Shadow Generator</Logo>\n\n        <Button href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=ZAGXXY6JEQ5NE&source=url\">\n          Donate\n        </Button>\n      </Nav>\n    </Container>\n  </HeaderTag>\n);\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport interface IconWrapperProps {\n  active: boolean;\n}\n\nexport const SettingsTag = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-bottom: 40px;\n  flex: 1 1 35%;\n`;\n\nexport const Wrapper = styled.div`\n  flex: 1;\n  padding: 0 20px;\n  padding-top: 40px;\n  max-width: 395px;\n\n  @media screen and (max-width: 1024px) {\n    max-width: 700px;\n  }\n`;\n\nexport const Group = styled.div`\n  margin: 8px 0;\n  padding: 10px 5px;\n  border-bottom: 1px solid #ccc;\n`;\n\nexport const Command = styled.pre`\n  padding: 15px;\n  line-height: 24px;\n  font-size: 0.85rem;\n  border-radius: 15px 15px 0 0;\n  color: #ffffff;\n  background-color: #2b2b2b;\n  max-width: 100%;\n  overflow: auto;\n  white-space: nowrap;\n\n  &::-webkit-scrollbar {\n    height: 5px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 5px;\n    background-color: rgba(190, 190, 190, 0.6);\n  }\n`;\n\nexport const IconWrapper = styled.div<IconWrapperProps>`\n  text-align: right;\n  color: ${props => (props.active ? '#e67e22' : '#888')};\n  margin-bottom: 5px;\n\n  > span {\n    position: relative;\n  }\n\n  button {\n    cursor: pointer;\n    font-size: 1.3rem;\n    transition: color 0.1s;\n    border: none;\n    background-color: transparent;\n    color: inherit;\n    outline: none;\n\n    &:active {\n      color: orange;\n      transform: scale(0.8);\n    }\n  }\n`;\n\nexport const CopiedMessage = styled.div`\n  position: absolute;\n  top: calc(-100% - 40px);\n  left: 50%;\n  transform: translate(-50%);\n  background-color: #fff;\n  padding: 10px 15px;\n  box-shadow: 0 0 5px #ccc;\n  border-radius: 10px;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -5px;\n    left: 50%;\n    width: 10px;\n    height: 10px;\n    transform: translateX(-50%) rotate(45deg);\n    box-shadow: 5px 5px 5px #ccc;\n    background-color: #fff;\n  }\n`;\n","import styled from 'styled-components';\n\nexport interface InputProps {\n  type: string;\n}\n\nconst displayNoneTypes = ['color', 'checkbox'];\n\nexport const Group = styled.div`\n  margin: 8px 0;\n`;\n\nexport const Input = styled.input<InputProps>`\n  width: 100%;\n  display: ${props => (displayNoneTypes.includes(props.type) ? 'none' : 'inline-block')};\n`;\n\nexport const Range = styled.input`\n  -webkit-appearance: none;\n  appearance: none;\n  height: 5px;\n  width: 100%;\n  outline: none;\n  opacity: 0.7;\n  background-color: #d3d3d3;\n  border-radius: 10px;\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: #2f3542;\n    cursor: pointer;\n  }\n\n  &::-moz-range-thumb {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: #2f3542;\n    cursor: pointer;\n  }\n`;\n\nexport const InputHead = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import React, { FC } from 'react';\n\nimport { Group } from './styles';\n\nexport interface BaseInputProps {\n  name?: string;\n  active?: string;\n}\n\nexport const BaseInput: FC<BaseInputProps> = ({ children }) => {\n  return <Group>{children}</Group>;\n};\n","import React from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n/// @ts-ignore\nimport ColorPicker from 'rc-color-picker';\n\nimport { BaseInput, BaseInputProps } from '../BaseInput';\nimport { InputHead } from '../BaseInput/styles';\n\nimport 'rc-color-picker/assets/index.css';\n\nexport interface InputColorProps extends BaseInputProps {\n  name: string;\n  value: string;\n  alpha: number;\n  onChange: ({ color, alpha }: { color: string; alpha: number }) => void;\n}\n\nexport function InputColor({ name, onChange, alpha, value }: InputColorProps) {\n  return (\n    <BaseInput>\n      <InputHead>\n        {name}\n\n        <ColorPicker\n          alpha={alpha}\n          color={value}\n          mode=\"HSB\"\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          /// @ts-ignore\n          onChange={obj => onChange(obj)}\n        >\n          <span className=\"rc-color-picker-trigger\" />\n        </ColorPicker>\n      </InputHead>\n    </BaseInput>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Range = styled.input`\n  -webkit-appearance: none;\n  appearance: none;\n  height: 5px;\n  width: 100%;\n  outline: none;\n  opacity: 0.7;\n  background-color: #d3d3d3;\n  border-radius: 10px;\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: #2f3542;\n    cursor: pointer;\n  }\n\n  &::-moz-range-thumb {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: #2f3542;\n    cursor: pointer;\n  }\n`;\n\nexport const ValueBox = styled.input`\n  position: relative;\n  width: 40px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n  padding: 3px 5px;\n  text-align: center;\n  outline: none;\n`;\n","import React from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n/// @ts-ignore\nimport { BaseInput, BaseInputProps } from '../BaseInput';\nimport { InputHead } from '../BaseInput/styles';\nimport { Range, ValueBox } from './styles';\n\nimport 'rc-color-picker/assets/index.css';\n\nexport interface InputColorProps extends BaseInputProps {\n  name: string;\n  value: number;\n  min: number;\n  max: number;\n  step?: number;\n  onChange: (value: number) => void;\n}\n\nexport function InputRange({ name, onChange, value, min, max, step }: InputColorProps) {\n  return (\n    <BaseInput>\n      <InputHead>\n        {name}\n\n        <ValueBox type=\"text\" value={value} onChange={e => onChange(Number(e.target.value))} />\n      </InputHead>\n\n      <Range\n        type=\"range\"\n        value={value}\n        min={min}\n        max={max}\n        step={step}\n        onChange={e => onChange(Number(e.target.value))}\n      />\n    </BaseInput>\n  );\n}\n","import styled from 'styled-components';\n\nimport { colors } from '../../../general-styles';\n\nexport interface TriggerProps {\n  active: boolean;\n}\n\nexport interface InputProps {\n  type: string;\n}\n\nexport const Switch = styled.label`\n  display: flex;\n  heigth: 20px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Trigger = styled.span<TriggerProps>`\n  position: relative;\n  display: inline-block;\n  width: 40px;\n  height: 20px;\n  line-height: 20px;\n  margin: 0 8px;\n  border-radius: 10px;\n  border: 1px solid #ccc;\n  cursor: pointer;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 9px;\n    left: ${({ active }) => (active ? 'calc(100% - 17px)' : '2px')};\n    transform: translateY(-50%);\n    display: inline-block;\n    width: 15px;\n    height: 15px;\n    border-radius: 50%;\n    background-color: ${({ active }) => (active ? colors.gradient.start : colors.gradient.end)};\n    transition: left 0.4s;\n  }\n`;\n\nconst displayNoneTypes = ['color', 'checkbox'];\n\nexport const Input = styled.input<InputProps>`\n  width: 100%;\n  display: ${props => (displayNoneTypes.includes(props.type) ? 'none' : 'inline-block')};\n`;\n","import React, { FC, useContext, useState } from 'react';\nimport Prism from 'prismjs';\n\nimport { SettingsTag, Group, Command, IconWrapper, CopiedMessage, Wrapper } from './styles';\n\nimport { InputColor } from '../../Form/InputColor';\nimport { InputRange } from '../../Form/InputRange';\nimport { InputSwitch } from '../../Form/InputSwitch';\nimport { BoxShadowContext } from '../../../contexts/BoxShadowContext';\nimport { hexToRgba } from '../../../utils/colorsConvertion';\n\nlet copyButtonTimeout: NodeJS.Timeout;\n\nconst Settings: FC = () => {\n  const [copyActive, setCopyActive] = useState(false);\n\n  const {\n    currentCssCommands,\n    boxShadow,\n    boxBackground,\n    containerBackground,\n    changeBoxShadow,\n    changeBoxBackground,\n    changeContainerBackground,\n  } = useContext(BoxShadowContext);\n\n  function handleCopy() {\n    setCopyActive(true);\n    clearTimeout(copyButtonTimeout);\n    copyButtonTimeout = setTimeout(() => setCopyActive(false), 5000);\n\n    navigator.clipboard.writeText(currentCssCommands);\n  }\n\n  function hightlighterCSS() {\n    const command = Prism.highlight(currentCssCommands, Prism.languages.css, 'css').replace(/;/g, '; <br />');\n\n    return { __html: command };\n  }\n\n  return (\n    <SettingsTag>\n      <Wrapper>\n        <Group>\n          <InputRange\n            name=\"Horizontal Length\"\n            min={-200}\n            max={200}\n            value={boxShadow.x}\n            onChange={val => changeBoxShadow({ x: val })}\n          />\n\n          <InputRange\n            name=\"Vertical Length\"\n            min={-200}\n            max={200}\n            value={boxShadow.y}\n            onChange={val => changeBoxShadow({ y: val })}\n          />\n        </Group>\n\n        <Group>\n          <InputRange\n            name=\"Blur Radius\"\n            value={boxShadow.blur}\n            min={0}\n            max={200}\n            onChange={val => changeBoxShadow({ blur: val })}\n          />\n\n          <InputRange\n            name=\"Spread Radius\"\n            value={boxShadow.length}\n            min={-100}\n            max={200}\n            onChange={val => changeBoxShadow({ length: val })}\n          />\n\n          <InputRange\n            name=\"Opacity\"\n            value={boxShadow.alpha / 100}\n            min={0}\n            max={1}\n            step={0.01}\n            onChange={val => changeBoxShadow({ alpha: val * 100 })}\n          />\n        </Group>\n\n        <Group>\n          <InputColor\n            name=\"Shadow color\"\n            value={boxShadow.rgba}\n            alpha={boxShadow.alpha}\n            onChange={({ alpha, color }) => changeBoxShadow({ alpha, hex: color })}\n          />\n\n          <InputColor\n            name=\"Background color\"\n            value={containerBackground.rgba}\n            alpha={containerBackground.alpha}\n            onChange={({ alpha, color }) => changeContainerBackground({ alpha, rgba: hexToRgba(color, alpha / 100) })}\n          />\n\n          <InputColor\n            name=\"Box color\"\n            value={boxBackground.rgba}\n            alpha={boxBackground.alpha}\n            onChange={({ alpha, color }) => changeBoxBackground({ alpha, rgba: hexToRgba(color, alpha / 100) })}\n          />\n        </Group>\n\n        <Group>\n          <InputSwitch\n            on=\"Inset\"\n            off=\"Outline\"\n            active={boxShadow.mode === 'inset'}\n            onChange={isChecked => changeBoxShadow({ mode: isChecked ? 'inset' : '' })}\n          />\n        </Group>\n\n        <Group>\n          <IconWrapper active={copyActive}>\n            <span>\n              <button type=\"button\" onClick={handleCopy}>\n                <i className=\"material-icons\">file_copy</i>\n              </button>\n\n              {copyActive && <CopiedMessage>Copied</CopiedMessage>}\n            </span>\n          </IconWrapper>\n\n          <Command>\n            <code dangerouslySetInnerHTML={hightlighterCSS()} />\n          </Command>\n        </Group>\n      </Wrapper>\n    </SettingsTag>\n  );\n};\n\nexport default Settings;\n","import React, { FC } from 'react';\n\nimport { BaseInput } from '../BaseInput';\nimport { Switch, Trigger, TriggerProps, Input } from './styles';\n\nexport interface LabelSwitchProps {\n  active: TriggerProps['active'];\n  on: string;\n  off: string;\n  onChange: (isChecked: boolean) => void;\n}\n\nexport const InputSwitch: FC<LabelSwitchProps> = ({ active, on, off, onChange }) => {\n  const id = String(Math.random());\n\n  return (\n    <BaseInput>\n      <Input id={id} type=\"checkbox\" onChange={e => onChange(e.target.checked)} />\n\n      <Switch htmlFor={id}>\n        <span>{off}</span>\n\n        <Trigger active={active} />\n\n        <span>{on}</span>\n      </Switch>\n    </BaseInput>\n  );\n};\n","export const hexToRgba = (hex: string, alpha: number) => {\n  const splitedHex = hex.slice(1, 7).match(/.{2}/g) || [];\n\n  const rgb = splitedHex.map(x => parseInt(x, 16)).join();\n\n  return `rgba(${rgb}, ${alpha})`;\n};\n","import React, { createContext, ReactNode, useState } from 'react';\n\nimport { generateCssCommand } from '../utils/generateCssCommand';\nimport { hexToRgba } from '../utils/colorsConvertion';\n\nimport { colors } from '../general-styles';\n\nexport interface BoxShadowContextData {\n  currentCssCommands: string;\n\n  boxShadow: {\n    rgba: string;\n    hex: string;\n    x: number;\n    y: number;\n    length: number;\n    blur: number;\n    alpha: number;\n    mode: 'inset' | '';\n  };\n\n  boxBackground: {\n    rgba: string;\n    alpha: number;\n  };\n\n  containerBackground: {\n    rgba: string;\n    alpha: number;\n  };\n\n  changeBoxShadow: (obj: Partial<BoxShadowContextData['boxShadow']>) => void;\n  changeBoxBackground: (obj: Partial<BoxShadowContextData['boxBackground']>) => void;\n  changeContainerBackground: (obj: Partial<BoxShadowContextData['containerBackground']>) => void;\n}\n\nexport interface BoxShadowProviderProps {\n  children: ReactNode;\n}\n\nexport const BoxShadowContext = createContext({} as BoxShadowContextData);\n\nexport function BoxShadowProvider({ children }: BoxShadowProviderProps) {\n  const [boxShadow, setBoxShadow] = useState<BoxShadowContextData['boxShadow']>({\n    rgba: 'rgba(0,0,0,1)',\n    hex: '#000000',\n    x: 0,\n    y: 0,\n    length: 0,\n    blur: 3,\n    alpha: 100,\n    mode: '',\n  });\n\n  const [boxBackground, setBoxBackgound] = useState<BoxShadowContextData['boxBackground']>({\n    rgba: hexToRgba(colors.white, 1),\n    alpha: 100,\n  });\n\n  const [containerBackground, setContainerBackgound] = useState<BoxShadowContextData['boxBackground']>({\n    rgba: hexToRgba(colors.white, 1),\n    alpha: 100,\n  });\n\n  const currentCssCommands = generateCssCommand(boxShadow);\n\n  const changeBoxShadow = (partial: Partial<BoxShadowContextData['boxShadow']>) => {\n    setBoxShadow({\n      ...boxShadow,\n      ...partial,\n\n      rgba: hexToRgba(partial.hex || boxShadow.hex, Number(((partial.alpha || boxShadow.alpha) / 100).toFixed(2))),\n    });\n  };\n\n  const changeBoxBackground = (partial: Partial<BoxShadowContextData['boxBackground']>) => {\n    setBoxBackgound({\n      ...boxBackground,\n      ...partial,\n    });\n  };\n\n  const changeContainerBackground = (partial: Partial<BoxShadowContextData['containerBackground']>) => {\n    setContainerBackgound({\n      ...containerBackground,\n      ...partial,\n    });\n  };\n\n  return (\n    <BoxShadowContext.Provider\n      value={{\n        currentCssCommands,\n        boxBackground,\n        boxShadow,\n        containerBackground,\n        changeBoxShadow,\n        changeBoxBackground,\n        changeContainerBackground,\n      }}\n    >\n      {children}\n    </BoxShadowContext.Provider>\n  );\n}\n","interface Shadow {\n  mode: 'inset' | '';\n  x: number;\n  y: number;\n  blur: number;\n  length: number;\n  rgba: string;\n}\n\nexport const generateCssCommand = ({ x, y, mode, blur, length, rgba }: Shadow) => {\n  const shadowTemplate = `\n    -webkit-box-shadow: ${mode} ${x}px ${y}px ${blur}px ${length}px ${rgba};\n    -moz-box-shadow: ${mode} ${x}px ${y}px ${blur}px ${length}px ${rgba};\n    box-shadow: ${mode} ${x}px ${y}px ${blur}px ${length}px ${rgba};\n  `;\n\n  return shadowTemplate;\n};\n","import styled from 'styled-components';\n\nexport interface PreviewTagProps {\n  background: string;\n}\n\nexport interface PreviewElementProps {\n  box: string;\n  shadow: string;\n}\n\nexport const PreviewTag = styled.div<PreviewTagProps>`\n  flex: 1 1 65%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ background }) => background};\n  overflow-x: hidden;\n  padding: 100px 0 80px;\n`;\n\nexport const PreviewElement = styled.div.attrs<PreviewElementProps>(({ shadow }) => ({\n  style: { boxShadow: shadow },\n}))<PreviewElementProps>`\n  width: 300px;\n  height: 400px;\n  padding: 50px 20px;\n  color: ${({ box }) => (box > '#999999' ? '#000000' : '#ffffff')};\n  background-color: ${({ box }) => box};\n  font-size: 0.9rem;\n`;\n","import React, { FC, useContext } from 'react';\n\nimport { BoxShadowContext } from '../../../contexts/BoxShadowContext';\n\nimport { PreviewTag, PreviewElement } from './styles';\n\nconst Preview: FC = () => {\n  const { boxBackground, containerBackground, currentCssCommands } = useContext(BoxShadowContext);\n\n  const shadow = currentCssCommands.split(';')[0].split(':')[1].trim();\n\n  return (\n    <PreviewTag background={containerBackground.rgba}>\n      <PreviewElement box={boxBackground.rgba} shadow={shadow} />\n    </PreviewTag>\n  );\n};\n\nexport default Preview;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 1024px) { flex-direction: column; }\n`;\n","import React from 'react';\n\nimport Settings from './Settings';\nimport Preview from './Preview';\n\nimport { Wrapper } from './styles';\n\nconst Generator = () => {\n  return (\n    <Wrapper>\n      <Settings />\n      <Preview />\n    </Wrapper>\n  );\n};\n\nexport default Generator;\n","import styled, { createGlobalStyle } from 'styled-components';\n\nimport { colors } from '../../general-styles';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    background: ${colors.gradient.start};\n    background:  linear-gradient(to right, ${colors.gradient.start}, ${colors.gradient.end}); \n    background:  -webkit-linear-gradient(to right, ${colors.gradient.start}, ${colors.gradient.end}); \n  }\n`;\n\nexport const MainContent = styled.main`\n  flex: 1;\n`;\n\nexport const Card = styled.div`\n  margin-top: 40px;\n  border-radius: 20px;\n  min-height: 400px;\n  background-color: #fff;\n  overflow: hidden;\n`;\n","import React from 'react';\n\nimport Header from '../../components/Header';\nimport Generator from '../../components/Generator';\nimport { BoxShadowProvider } from '../../contexts/BoxShadowContext';\n\nimport { Container } from '../../general-styles';\nimport { MainContent, GlobalStyle, Card } from './styles';\n\nconst HomePage = () => (\n  <BoxShadowProvider>\n    <GlobalStyle />\n    <Header />\n\n    <MainContent>\n      <Container>\n        <Card>\n          <Generator />\n        </Card>\n      </Container>\n    </MainContent>\n  </BoxShadowProvider>\n);\n\nexport default HomePage;\n","import React from 'react';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker.js';\n\nimport './styles/global.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}